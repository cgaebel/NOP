# Can this be used for something?
knownAddresses = [
    [0x004325A3, 'ZPostReload'],
    [0x0047DF27, 'ZPostSkill'],
    [0x0045BF6B, 'ZPostStageStartSetting'],
    [0x0042A254, 'ZChatOutput'],
    [0x00433747, 'ZPostRequestBuyItem'],
    [0x00433DB7, 'ZPostRequestBuyQuestItem'],
    [0x00433F30, 'ZPostRequestSellQuestItem'],
    [0x00458060, 'ZPostRequestDropSacrificeItem'],
    [0x004ABD45, 'ZGetMeshMgr'],
    [0x004245D5, 'ZPostWhere'],
    [0x004ABD87, 'ZGetCombatInterface'],
    [0x004ABD55, 'ZGetWeaponMeshMgr'],
    [0x0049A885, 'ZGetConfiguration'],
    [0x004ABDCB, 'ZGetScreenEffectManager'],
    [0x00465465, 'ZGetFlashBangEffect'],
    [0x00494415, 'ZGetSoundFMod'],
    [0x004BDFD5, 'ZGetWorldItemManager'],
    [0x00497115, 'ZGetSoundEngine'],
    [0x004970F5, 'ZGetFileSystem'],
    [0x004ABDBB, 'ZGetEffectManager'],
    [0x004244D5, 'ZPostFriendAdd'],
    [0x00497588, 'ZGetGameClient']
]

inputFile = 'svchost.exe'
outputFile = 'output.txt'
patchedFile = 'svchost_patched.exe'
opCodeToPatch = 0x90	            # NOP! :)
maximumAddressToCheck = 0x447454    # The highest possible address we'll patch - anything after it gets dropped.

def GetFileContents(filename):
    f = open(filename, 'rb')
    fileContents = f.read()
    f.close()
    
    return bytearray(fileContents)

def FindAll(fileContents, strToFind):
    found = []
    
    lastOffset = -1

    while True:
        lastOffset += 1
        lastOffset = fileContents.find(b'\xC3\xCC\xCC\xCC\xCC', lastOffset)
        
        if lastOffset != -1:
            found.append(lastOffset)
        else:
            break

    return found

def FixOffsets(offsetList):
    for current in range(0, len(offsetList)):
        offsetList[current] += 0x00400000
    return offsetList

def RemoveBlockedOffsets(offsetList):
    newList = []
    for o in offsetList:
        if o <= maximumAddressToCheck:
            newList.append(o)

    return newList

def AbsentFromList(toFind, theList):
    for i in theList:
        if i == toFind:
            return True
    return False

def PrintOffsetList(offsets, outputTarget):
    outputFile = open(outputTarget, 'w')

    print('// THIS WAS AUTOMATICALLY GENERATED BY: "./Gunz/Gunz - Protected/DumpRETNs.py" using "./Gunz/Gunz - Protected/svchost.exe"\n// Patches: ', len(offsets), '\nstatic void ApplyAutomaticallyGeneratedPatches()\n{', file=outputFile)

    for o in offsets:
        print("\tPatchJumpToRETN(", hex(o), ");", sep='', file=outputFile)

    print("}", file=outputFile)
        
    outputFile.close()

def RemoveRETNs(locationsOfRETNs, oldFilesContents, newFilesName):
    target = open(newFilesName, 'wb')

    toOutput = oldFilesContents

    for currentLoc in locationsOfRETNs:
        toPatch = currentLoc - 0x00400000
        toOutput[toPatch] = opCodeToPatch

    target.write(toOutput)

    target.close()

fileContents = GetFileContents(inputFile)
offsets = RemoveBlockedOffsets(FixOffsets(FindAll(fileContents, '\xC3\xCC\xCC\xCC\xCC')))
PrintOffsetList(offsets, outputFile)
RemoveRETNs(offsets, fileContents, patchedFile)
